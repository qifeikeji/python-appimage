name: Applications
on:
  workflow_dispatch:
    inputs:
      scipy:
        required: true
        default: true
        type: boolean
      tasmotizer:
        required: true
        default: true
        type: boolean
      xonsh:
        required: true
        default: true
        type: boolean
      ssh-mitm:
        required: true
        default: true
        type: boolean
      beeref:
        required: true
        default: true
        type: boolean

jobs:
  Test:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    strategy:
      matrix:
        version: ['3.7', '3.9']

    steps:
    - uses: actions/checkout@v4
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential zlib1g-dev libncurses5-dev \
                                libgdbm-dev libnss3-dev libssl-dev libreadline-dev \
                                libffi-dev curl libbz2-dev libfuse2 \
                                qt5-default libqt5svg5-dev libgl1-mesa-dev
    - name: Install appimagetool
      run: |
        wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
        chmod +x appimagetool-x86_64.AppImage
        sudo mv appimagetool-x86_64.AppImage /usr/local/bin/appimagetool
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.version }}
    - name: Install python_appimage
      run: pip install --upgrade python-appimage

    - name: Test scipy
      if: ${{ inputs.scipy }}
      run: |
        python -m python_appimage build app applications/scipy                 \
                                            --python-version=${{ matrix.version }}
        test -e scipy-x86_64.AppImage
        ./scipy-x86_64.AppImage -c 'import numpy, pandas, scipy'
    - name: Upload scipy AppImage
      if: ${{ inputs.scipy }}
      uses: actions/upload-artifact@v4
      with:
        name: scipy-x86_64-AppImage-${{ matrix.version }}
        path: scipy-x86_64.AppImage
        retention-days: 7

    - name: Test tasmotizer
      if: ${{ inputs.tasmotizer }}
      run: |
        python -m python_appimage build app applications/tasmotizer            \
                                            --linux-tag=manylinux1_x86_64      \
                                            --python-version=3.9
        test -e tasmotizer-x86_64.AppImage
    - name: Upload tasmotizer AppImage
      if: ${{ inputs.tasmotizer }}
      uses: actions/upload-artifact@v4
      with:
        name: tasmotizer-x86_64-AppImage-${{ matrix.version }}
        path: tasmotizer-x86_64.AppImage
        retention-days: 7

    - name: Test xonsh
      if: ${{ inputs.xonsh }}
      run: |
        python -m python_appimage build app applications/xonsh
        test -e xonsh-x86_64.AppImage
        ./xonsh-x86_64.AppImage -c 'import xonsh'
    - name: Upload xonsh AppImage
      if: ${{ inputs.xonsh }}
      uses: actions/upload-artifact@v4
      with:
        name: xonsh-x86_64-AppImage-${{ matrix.version }}
        path: xonsh-x86_64.AppImage
        retention-days: 7

    - name: Test ssh-mitm
      if: ${{ inputs.ssh_mitm && (matrix.version == '3.9') }}
      run: |
        python -m python_appimage build app applications/ssh-mitm
        test -e ssh-mitm-x86_64.AppImage
        ./ssh-mitm-x86_64.AppImage --help
    - name: Upload ssh-mitm AppImage
      if: ${{ inputs.ssh_mitm && (matrix.version == '3.9') }}
      uses: actions/upload-artifact@v4
      with:
        name: ssh-mitm-x86_64-AppImage-${{ matrix.version }}
        path: ssh-mitm-x86_64.AppImage
        retention-days: 7

    - name: Test beeref
      if: ${{ inputs.beeref }}
      run: |
        python -m python_appimage build app applications/beeref                \
                                            --python-version=${{ matrix.version }}
        test -e beeref-x86_64.AppImage
        ./beeref-x86_64.AppImage --version || echo "BeeRef may be GUI-only"
    - name: Upload beeref AppImage
      if: ${{ inputs.beeref }}
      uses: actions/upload-artifact@v4
      with:
        name: beeref-x86_64-AppImage-${{ matrix.version }}
        path: beeref-x86_64.AppImage
        retention-days: 7

    - name: Debug AppImage location
      run: |
        find $GITHUB_WORKSPACE -name "*.AppImage"
        ls -lh $GITHUB_WORKSPACE/*.AppImage || echo "No AppImage in root"
